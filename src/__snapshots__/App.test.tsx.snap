// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App smoke test 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <TopBar
          cartNumber={0}
          handleSearchClear={[Function]}
          searchText=""
          searchTextHandler={[Function]}
        />,
        <ShopContent
          addToCart={[Function]}
          categoryItem={Array []}
          handlePageClick={[Function]}
          handleSelectedIdClick={[Function]}
          items={Array []}
          pageCount={0}
          searchText=""
          selectedId=""
        />,
      ],
      "className": "root",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "cartNumber": 0,
          "handleSearchClear": [Function],
          "searchText": "",
          "searchTextHandler": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "addToCart": [Function],
          "categoryItem": Array [],
          "handlePageClick": [Function],
          "handleSelectedIdClick": [Function],
          "items": Array [],
          "pageCount": 0,
          "searchText": "",
          "selectedId": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <TopBar
            cartNumber={0}
            handleSearchClear={[Function]}
            searchText=""
            searchTextHandler={[Function]}
          />,
          <ShopContent
            addToCart={[Function]}
            categoryItem={Array []}
            handlePageClick={[Function]}
            handleSelectedIdClick={[Function]}
            items={Array []}
            pageCount={0}
            searchText=""
            selectedId=""
          />,
        ],
        "className": "root",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cartNumber": 0,
            "handleSearchClear": [Function],
            "searchText": "",
            "searchTextHandler": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addToCart": [Function],
            "categoryItem": Array [],
            "handlePageClick": [Function],
            "handleSelectedIdClick": [Function],
            "items": Array [],
            "pageCount": 0,
            "searchText": "",
            "selectedId": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
